---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: path-rules-foo-exact
spec:
  replicas: 1
  selector:
    matchLabels:
      app: path-rules-foo-exact
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: path-rules-foo-exact
    spec:
      containers:
        - env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INGRESS_NAME
              value: path-rules
            - name: SERVICE_NAME
              value: foo-exact
          image: k8s.gcr.io/ingressconformance/echoserver:v0.0.1@sha256:9b34b17f391f87fb2155f01da2f2f90b7a4a5c1110ed84cb5379faa4f570dc52
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          name: ingress-conformance-echo
          ports:
            - containerPort: 3000
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          resources: { }
---
apiVersion: v1
kind: Service
metadata:
  name: foo-exact
spec:
  ports:
    - port: 8080
      targetPort: 3000
  selector:
    app: path-rules-foo-exact
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: path-rules-foo-prefix
spec:
  replicas: 1
  selector:
    matchLabels:
      app: path-rules-foo-prefix
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: path-rules-foo-prefix
    spec:
      containers:
        - env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INGRESS_NAME
              value: path-rules
            - name: SERVICE_NAME
              value: foo-prefix
          image: k8s.gcr.io/ingressconformance/echoserver:v0.0.1@sha256:9b34b17f391f87fb2155f01da2f2f90b7a4a5c1110ed84cb5379faa4f570dc52
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          name: ingress-conformance-echo
          ports:
            - containerPort: 3000
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          resources: { }
---
apiVersion: v1
kind: Service
metadata:
  name: foo-prefix
spec:
  ports:
    - port: 8080
      targetPort: 3000
  selector:
    app: path-rules-foo-prefix
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: path-rules-aaa-slash-bbb-prefix
spec:
  replicas: 1
  selector:
    matchLabels:
      app: path-rules-aaa-slash-bbb-prefix
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: path-rules-aaa-slash-bbb-prefix
    spec:
      containers:
        - env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INGRESS_NAME
              value: path-rules
            - name: SERVICE_NAME
              value: aaa-slash-bbb-prefix
          image: k8s.gcr.io/ingressconformance/echoserver:v0.0.1@sha256:9b34b17f391f87fb2155f01da2f2f90b7a4a5c1110ed84cb5379faa4f570dc52
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          name: ingress-conformance-echo
          ports:
            - containerPort: 3000
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          resources: { }
---
apiVersion: v1
kind: Service
metadata:
  name: aaa-slash-bbb-prefix
spec:
  ports:
    - port: 8080
      targetPort: 3000
  selector:
    app: path-rules-aaa-slash-bbb-prefix
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: path-rules-aaa-prefix
spec:
  replicas: 1
  selector:
    matchLabels:
      app: path-rules-aaa-prefix
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: path-rules-aaa-prefix
    spec:
      containers:
        - env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INGRESS_NAME
              value: path-rules
            - name: SERVICE_NAME
              value: aaa-prefix
          image: k8s.gcr.io/ingressconformance/echoserver:v0.0.1@sha256:9b34b17f391f87fb2155f01da2f2f90b7a4a5c1110ed84cb5379faa4f570dc52
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          name: ingress-conformance-echo
          ports:
            - containerPort: 3000
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          resources: { }
---
apiVersion: v1
kind: Service
metadata:
  name: aaa-prefix
spec:
  ports:
    - port: 8080
      targetPort: 3000
      name: nodeport1
    - port: 8081
      targetPort: 3000
      name: nodeport2
  selector:
    app: path-rules-aaa-prefix
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: path-rules-aaa-slash-bbb-slash-prefix
spec:
  replicas: 1
  selector:
    matchLabels:
      app: path-rules-aaa-slash-bbb-slash-prefix
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: path-rules-aaa-slash-bbb-slash-prefix
    spec:
      containers:
        - env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INGRESS_NAME
              value: path-rules
            - name: SERVICE_NAME
              value: aaa-slash-bbb-slash-prefix
          image: k8s.gcr.io/ingressconformance/echoserver:v0.0.1@sha256:9b34b17f391f87fb2155f01da2f2f90b7a4a5c1110ed84cb5379faa4f570dc52
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          name: ingress-conformance-echo
          ports:
            - containerPort: 3000
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          resources: { }
---
apiVersion: v1
kind: Service
metadata:
  name: aaa-slash-bbb-slash-prefix
spec:
  ports:
    - port: 8080
      targetPort: 3000
  selector:
    app: path-rules-aaa-slash-bbb-slash-prefix
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: path-rules-foo-slash-exact
spec:
  replicas: 1
  selector:
    matchLabels:
      app: path-rules-foo-slash-exact
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: path-rules-foo-slash-exact
    spec:
      containers:
        - env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INGRESS_NAME
              value: path-rules
            - name: SERVICE_NAME
              value: foo-slash-exact
          image: k8s.gcr.io/ingressconformance/echoserver:v0.0.1@sha256:9b34b17f391f87fb2155f01da2f2f90b7a4a5c1110ed84cb5379faa4f570dc52
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          name: ingress-conformance-echo
          ports:
            - containerPort: 3000
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          resources: { }
---
apiVersion: v1
kind: Service
metadata:
  name: foo-slash-exact
spec:
  ports:
    - port: 8080
      targetPort: 3000
  selector:
    app: path-rules-foo-slash-exact
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: path-rules
spec:
  ingressClassName: cilium
  rules:
    - host: exact-path-rules
      http:
        paths:
          - backend:
              service:
                name: foo-exact
                port:
                  number: 8080
            path: /foo
            pathType: Prefix
    - host: prefix-path-rules
      http:
        paths:
          - backend:
              service:
                name: foo-prefix
                port:
                  number: 8080
            path: /foo
            pathType: Prefix
          - backend:
              service:
                name: aaa-slash-bbb-prefix
                port:
                  number: 8080
            path: /aaa/bbb
            pathType: Prefix
          - backend:
              service:
                name: aaa-prefix
                port:
                  number: 8081
            path: /aaa
            pathType: Prefix
    - host: mixed-path-rules
      http:
        paths:
          - backend:
              service:
                name: foo-prefix
                port:
                  number: 8080
            path: /foo
            pathType: Prefix
          - backend:
              service:
                name: foo-exact
                port:
                  number: 8080
            path: /foo
            pathType: Exact
    - host: trailing-slash-path-rules
      http:
        paths:
          - backend:
              service:
                name: aaa-slash-bbb-slash-prefix
                port:
                  number: 8080
            path: /aaa/bbb/
            pathType: Prefix
          - backend:
              service:
                name: foo-slash-exact
                port:
                  number: 8080
            path: /foo/
            pathType: Exact
